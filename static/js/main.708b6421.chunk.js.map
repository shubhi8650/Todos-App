{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","inputText","setInputText","todos","setTodos","setStatus","id","onSubmit","e","preventDefault","text","compleated","Math","floor","random","type","className","onChange","target","value","name","Todo","todo","onClick","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAwCeA,MAnCf,YAA0E,IAAvDC,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,UAiBzD,OACI,sBAAKC,GAAG,YAAR,UAEI,uBAAMC,SAfU,SAACC,GACrBA,EAAEC,iBACFL,EAAS,GAAD,mBACDD,GADC,CACM,CAACO,KAAKT,EAAWU,YAAW,EAAOL,GAAIM,KAAKC,MAAoB,IAAdD,KAAKE,cAErEZ,EAAa,KAUT,UACI,uBAAOa,KAAK,OAAOC,UAAU,aAAaC,SAnB9B,SAAAT,GACpBN,EAAaM,EAAEU,OAAOC,QAkByDA,MAAOlB,IAC9E,wBAAQe,UAAU,cAAcD,KAAK,SAArC,qBAEJ,qBAAKC,UAAU,SAAf,SACI,yBAAQC,SAXA,SAACT,GACjBH,EAAUG,EAAEU,OAAOC,QAUsBC,KAAK,QAAQJ,UAAU,cAAxD,UACI,wBAAQG,MAAM,MAAd,iBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,eAAd,mC,OCGLE,EA/BJ,SAAC,GAAmC,IAAlCX,EAAiC,EAAjCA,KAAOY,EAA0B,EAA1BA,KAAMnB,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,SAoB7B,OACI,sBAAKY,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeM,EAAKX,WAAa,aAAe,IAA7D,SAAoED,IACpE,wBAAQM,UAAU,mBAAmBO,QAdtB,WACnBnB,EAASD,EAAMqB,KAAI,SAACC,GAChB,OAAGA,EAAKnB,KAAOgB,EAAKhB,GAChB,2BACOmB,GADP,IACad,YAAac,EAAKd,aAG5Bc,OAOP,uBACA,wBAAQT,UAAU,eAAeO,QAtBrB,WAGhBnB,EAASD,EAAMuB,QAAO,SAACC,GAAD,OAASA,EAAGrB,KAAOgB,EAAKhB,QAmB1C,uBCFGsB,MArBf,YAAsD,IAAnCzB,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAWyB,EAAgB,EAAhBA,cAGjC,OACI,qBAAKb,UAAU,iBAAf,SACI,oBAAIA,UAAU,YAAd,SAEQa,EAAcL,KAAI,SAAAF,GAAI,OAClB,cAAC,EAAD,CACAnB,MAAOA,EACPC,SAAUA,EACVM,KAAOY,EAAKZ,KACZY,KAAMA,GACDA,EAAKhB,YCiCnBwB,MA5Cf,WAEE,MAAmCC,mBAAS,IAA5C,mBAAO9B,EAAP,KAAmBC,EAAnB,KACA,EAA0B6B,mBAAS,IAAnC,mBAAO5B,EAAP,KAAcC,EAAd,KACA,EAA4B2B,mBAAS,OAArC,mBAAOC,EAAP,KAAe3B,EAAf,KACA,EAA0C0B,mBAAS,IAAnD,mBAAOF,EAAP,KAAsBI,EAAtB,KAEAC,qBAAU,WACRC,MACA,CAAChC,EAAO6B,IAEV,IAAMG,EAAc,WAClB,OAAOH,GACL,IAAK,aACHC,EAAiB9B,EAAMuB,QAAO,SAACD,GAAD,OAA4B,GAAnBA,EAAKd,eAC5C,MACF,IAAK,eACHsB,EAAiB9B,EAAMuB,QAAO,SAACD,GAAD,OAA4B,GAAnBA,EAAKd,eAC5C,MACF,QACEsB,EAAiB9B,KAKvB,OACE,sBAAKa,UAAU,MAAf,UACE,iCACA,oBAAIV,GAAG,eAAP,+BAGA,cAAC,EAAD,CACAH,MAAOA,EACPC,SAAUA,EACVH,UAAWA,EACXI,UAAWA,EACXH,aAAcA,IAGd,cAAC,EAAD,CAAUC,MAAOA,EAAOC,SAAUA,EAAUyB,cAAeA,QC1CjEO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.708b6421.chunk.js","sourcesContent":["\r\n\r\n\r\nimport React from 'react'\r\n\r\nfunction TodoForm({inputText, setInputText, todos, setTodos, setStatus}) {\r\n\r\n    const inputTextHandlers=e=>{\r\n        setInputText(e.target.value)\r\n    }\r\n    const submitTodoHandler=(e)=>{\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, {text:inputText, compleated:false, id: Math.floor(Math.random()*10000)}\r\n        ])\r\n        setInputText(\"\")\r\n\r\n    }\r\n\r\n    const statusHandler=(e)=>{\r\n        setStatus(e.target.value)\r\n    }\r\n    return (\r\n        <div id=\"container\">\r\n            \r\n            <form onSubmit={submitTodoHandler}>\r\n                <input type=\"text\" className=\"todo-input\" onChange={inputTextHandlers} value={inputText}/>\r\n                <button className=\"todo-button\" type=\"submit\" >task</button>\r\n            </form>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"All\">All</option>\r\n                    <option value=\"Compleated\">Compleated</option>\r\n                    <option value=\"Uncompleated\">Uncompleated</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","\r\n\r\n\r\nimport React from 'react'\r\n\r\nconst Todo=({text,  todo, todos, setTodos})=> {\r\n    \r\n    const deleteHandler=()=>{\r\n        \r\n        \r\n        setTodos(todos.filter((el) => (el.id !== todo.id)));\r\n        \r\n    };\r\n\r\n    const compleateHandler=()=>{\r\n        setTodos(todos.map((item)=>{\r\n            if(item.id === todo.id){\r\n                return{\r\n                    ...item, compleated: !item.compleated\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.compleated ? 'compleated' : ''}`}>{text}</li>\r\n            <button className=\"compleate-button\" onClick={compleateHandler}>Compleate</button>\r\n            <button className=\"trash-button\" onClick={deleteHandler}>Trash</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Todo\r\n","\r\n\r\n\r\nimport React from 'react'\r\nimport Todo from './Todo'\r\n\r\nfunction TodoList({todos, setTodos , filteredTodos}) {\r\n   \r\n\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {\r\n                    filteredTodos.map(todo=>(\r\n                        <Todo  \r\n                        todos={todos}\r\n                        setTodos={setTodos}\r\n                        text ={todo.text} \r\n                        todo={todo}\r\n                        key={todo.id}/>\r\n                    ))\r\n                }\r\n            </ul>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","\nimport { useState , useEffect } from 'react';\nimport './App.css';\n\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\n\n\nfunction App() {\n\n  const [inputText , setInputText] = useState(\"\")\n  const [todos, setTodos] = useState([])\n  const [status, setStatus] = useState('all')\n  const [filteredTodos, setFilteredTodos] = useState([])\n\n  useEffect(()=>{\n    filterHandler()\n  },[todos, status])\n\n  const filterHandler=()=>{\n    switch(status){\n      case 'Compleated':\n        setFilteredTodos(todos.filter((item)=>(item.compleated == true)));\n        break;\n      case 'Uncompleated':\n        setFilteredTodos(todos.filter((item)=>(item.compleated == false)));\n        break;\n      default:\n        setFilteredTodos(todos)  \n        break;\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n      <h1 id=\"todo-heading\">Shubham's Todos</h1>\n      </header>\n      \n      <TodoForm \n      todos={todos}\n      setTodos={setTodos}\n      inputText={inputText}\n      setStatus={setStatus}\n      setInputText={setInputText}/>\n\n\n      <TodoList todos={todos} setTodos={setTodos} filteredTodos={filteredTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}